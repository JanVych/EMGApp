<Page
    x:Name="mainPage"
    x:Class="EMGApp.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:lvc="using:LiveChartsCore.SkiaSharpView.WinUI"
    xmlns:local1="using:EMGApp.Models" 
    mc:Ignorable="d"
    xmlns:behaviors="using:EMGApp.Behaviors"
    behaviors:NavigationViewHeaderBehavior.HeaderContext="Measurement">
    
    <Page.Resources>
        <StackLayout x:Name="HorizontalStackLayout" Orientation="Horizontal"/>

        <Style x:Key="AddMuscleTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="InfoGrid" TargetType="Grid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardStrokeColorDefaultBrush}"/>
            <Setter Property="Background" Value="{StaticResource ControlFillColorDefaultBrush}"/>
            <Setter Property="Height" Value="60"/>
        </Style>
        <Style x:Key="InfoStackPanel" TargetType="StackPanel">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3,0,3,0"/>
        </Style>
        <Style x:Key="DefaultStackPanel" TargetType="StackPanel">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="BorderBrush" Value="{StaticResource CardStrokeColorDefaultBrush}"/>
            <Setter Property="Background" Value="{StaticResource ControlFillColorDefaultBrush}"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
            <Setter Property="Height" Value="40"/>
        </Style>
        <Style x:Key="InfoTitleTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BodyStrongTextBlockStyle}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="InfoContentTextBlock" TargetType="TextBlock" BasedOn="{StaticResource CaptionTextBlockStyle}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
    </Page.Resources>


    <Grid RowDefinitions="Auto,Auto,*,Auto, Auto" Margin="0,0,0,10">
        <Grid Grid.Row="0" ColumnDefinitions="auto,*">
            <Grid Grid.Column="0" Padding="10,0,10,0"
                  Style="{StaticResource InfoGrid}">
                <StackPanel Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="{x:Bind ViewModel.CurrentPatient.FullName}"
                           Style="{StaticResource InfoTitleTextBlock}"/>
                    <TextBlock Text="{x:Bind ViewModel.CurrentPatient.IdentificationNumber}"
                           Style="{StaticResource InfoTitleTextBlock}"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1" ColumnDefinitions="*,*,*,*,*,*"
                  Margin="10,0,0,0"
                  Style="{StaticResource InfoGrid}">
                <StackPanel Grid.Column="0" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Input device" 
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <TextBlock Text="{x:Bind ViewModel.DeviceName}" 
                               Style="{StaticResource InfoContentTextBlock}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Sample rate" 
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.SampleRate}"
                               Style="{StaticResource InfoContentTextBlock}"/>
                        <TextBlock Text=" Hz" Style="{StaticResource InfoContentTextBlock}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="2" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Window shift time" 
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.WindowShiftMilliseconds}"
                               Style="{StaticResource InfoContentTextBlock}"/>
                        <TextBlock Text=" ms" Style="{StaticResource InfoContentTextBlock}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="3" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Measurement time" 
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.MeasuremntMaxTime}"
                               Style="{StaticResource InfoContentTextBlock}"/>
                        <TextBlock Text=" s" Style="{StaticResource InfoContentTextBlock}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="4" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Window lenghth" 
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.WindowLength}"
                               Style="{StaticResource InfoContentTextBlock}"/>
                        <TextBlock Text=" samples" Style="{StaticResource InfoContentTextBlock}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="5" Style="{StaticResource InfoStackPanel}">
                    <TextBlock Text="Calculation"
                               Style="{StaticResource InfoTitleTextBlock}"/>
                    <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.DominantFrequencyCalculationTypeString}"
                               Style="{StaticResource InfoContentTextBlock}"/>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid Grid.Row="1" ColumnDefinitions="*, auto"
              Margin="0,10,0,0"
              HorizontalAlignment="Left">
            <ScrollViewer Grid.Column="0"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Disabled"
                          VerticalScrollMode="Disabled">
                <ItemsRepeater x:Name="itemsRepeater"
                               ItemsSource="{x:Bind ViewModel.CurrentMeasurementData, Mode=OneWay}" 
                               Layout="{StaticResource HorizontalStackLayout}">
                    <DataTemplate x:DataType="local1:MeasurementData">
                        <Grid>
                            <ToggleButton x:Name="muscleButton"
                                          Margin="0,0,10,0"
                                          BorderThickness="1"
                                          BorderBrush="{StaticResource CardStrokeColorDefaultBrush}"
                                          Background="{ThemeResource ControlFillColorDefaultBrush}"
                                          IsChecked="{x:Bind IsActive}"
                                          Height="60"
                                          Click="ToggleButton_Click">
                                <StackPanel>
                                    <TextBlock x:Name="muscleTypeString" 
                                               Grid.Column="0" Text="{x:Bind MuscleTypeString}"
                                               Style="{StaticResource BodyStrongTextBlockStyle}"/>
                                    <TextBlock x:Name="sideString" 
                                               Grid.Column="1" Text="{x:Bind SideString}"
                                               Style="{StaticResource BodyTextBlockStyle}"/>
                                </StackPanel>
                            </ToggleButton>
                        </Grid>
                        
                    </DataTemplate>
                </ItemsRepeater>
            </ScrollViewer>
            
            <Button Grid.Column="1" Height="60"
                    BorderThickness="1"
                    BorderBrush="{StaticResource CardStrokeColorDefaultBrush}"
                    Background="{ThemeResource ControlFillColorDefaultBrush}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <FontIcon Glyph="&#xE710;"/>
                        <StackPanel Margin="10,0,0,0">
                            <TextBlock Text="Add" Style="{StaticResource AddMuscleTextBlock}"/>
                            <TextBlock Text="muscle" Style="{StaticResource AddMuscleTextBlock}"/>
                        </StackPanel>
                    </StackPanel>
                </Button.Content>
                <Button.Flyout>
                    <Flyout x:Name="mFlyout" Placement="Bottom">
                        

                        <StackPanel Spacing="10">
                            <ComboBox Height="60" Header="Muscle type"
                                      SelectedIndex="{x:Bind ViewModel.SelectedMuscleType, Mode=TwoWay}"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                      ItemsSource="{x:Bind ViewModel.MuscleTypeStrings}"
                                      DisplayMemberPath="Value"  SelectedValuePath="Key"/>
                            <RadioButtons SelectedIndex="{x:Bind ViewModel.Side, Mode=TwoWay}"
                                          MaxColumns="2"
                                          HorizontalAlignment="Left" VerticalAlignment="Center" >
                                <x:String>Right</x:String>
                                <x:String>Left</x:String>
                            </RadioButtons>
                            <ComboBox Height="60" Header="Measurement type"
                                      SelectedIndex="{x:Bind ViewModel.SelectedMeasurementType, Mode=TwoWay}"
                                      HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                      ItemsSource="{x:Bind ViewModel.MeasurementTypeStrings}"
                                      DisplayMemberPath="Value"  SelectedValuePath="Key"/>
                            <NumberBox Height="60" Header="Force [N]" 
                                       HorizontalAlignment="Stretch" VerticalAlignment="Center"
                                       Value="{x:Bind ViewModel.Force}"/>
                            <Button HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                    Height="40"
                                    Command="{x:Bind ViewModel.AddMuscleButtonCommand}"
                                    Foreground="{StaticResource TextOnAccentFillColorPrimaryBrush}"
                                    Background="{StaticResource AccentFillColorDefaultBrush}"
                                    Click="Button_Click">
                                <TextBlock Text="Add muscle" Style="{StaticResource BodyTextBlockStyle}"/>
                            </Button>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>

            </Button>
        </Grid>

        <Grid Grid.Row="2" ColumnDefinitions="2*,3*" x:Name="chartsGrid">
            <lvc:CartesianChart Grid.Column="0"
                                XAxes="{x:Bind ViewModel.FrequencySpectrumXAxes}" YAxes="{x:Bind ViewModel.FrequencySpectrumYAxes}"
                                Series="{x:Bind ViewModel.FrequencySpectrumSeries}"/>
            <lvc:CartesianChart Grid.Column="1"
                                XAxes="{x:Bind ViewModel.DominantValuesXAxes}" YAxes="{x:Bind ViewModel.DominantValuesYAxes}"
                                Series="{x:Bind ViewModel.DominantValuesSeries}"/>
        </Grid>

        <Grid Grid.Row="3" ColumnDefinitions="auto,*,auto"
              HorizontalAlignment="Stretch" Margin="40,15,40,15">
            <StackPanel Grid.Column="0" Orientation="Horizontal" Width="40">
                <TextBlock Text="{x:Bind ViewModel.ProgressTimeValue, Mode=OneWay}"/>
                <TextBlock Text=" s"/>
            </StackPanel>
            <ProgressBar Grid.Column="1" HorizontalAlignment="Stretch"
                         Margin="15,0,15,0"
                         Maximum="{x:Bind ViewModel.CurrentMeasurement.DataSize}" 
                         Value="{x:Bind ViewModel.ProgressBarValue, Mode=OneWay}"/>
            <StackPanel Grid.Column="2" Orientation="Horizontal" Width="40">
                <TextBlock Text="{x:Bind ViewModel.CurrentMeasurement.MeasuremntMaxTime}"/>
                <TextBlock Text=" s"/>
            </StackPanel>
        </Grid>
        

        <Grid Grid.Row="4" ColumnDefinitions="*,auto">
            <StackPanel Grid.Column="0" Height="60" HorizontalAlignment="Center"
                        Style="{StaticResource DefaultStackPanel}">
                <AppBarButton Icon="Play" Label="Start" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"
                              Command="{x:Bind ViewModel.StartButtonCommand}"/>
                <AppBarButton Icon="Stop" Label="Stop" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0"
                              Command="{x:Bind ViewModel.StopButtonCommand}" />
                <AppBarButton Icon="Refresh" Label="Reset" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,0,0,0"
                              Command="{x:Bind ViewModel.ResetButtonCommand}" />

                <AppBarButton Icon="Save" Label="Save" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="30,0,0,0"
                              Command="{x:Bind ViewModel.SaveButtonCommand}" />

                <AppBarButton Icon="Setting" Label="Setup" 
                              HorizontalAlignment="Center" VerticalAlignment="Center" Margin="30,0,0,0"
                              Command="{x:Bind ViewModel.ChangeSettingsCommand}"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Spacing="10" Orientation="Horizontal" HorizontalAlignment="Right">
                <StackPanel Style="{StaticResource DefaultStackPanel}">
                    <TextBlock Text="Start frequency:" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Text="{x:Bind ViewModel.StartFrequency, Mode=OneWay}" 
                               Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Text="Hz" 
                               Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </StackPanel>
                <StackPanel Style="{StaticResource DefaultStackPanel}">
                    <TextBlock Text="Slope:" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Text="{x:Bind ViewModel.Slope, Mode=OneWay}" 
                               Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    <TextBlock Text="Hz/s"
                               Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </StackPanel>
            </StackPanel>
           
        </Grid>
    </Grid>
</Page>
