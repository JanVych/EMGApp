<Page
    x:Class="EMGApp.Views.PatientsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local1="using:EMGApp.Models" 
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    xmlns:behaviors="using:EMGApp.Behaviors"
    behaviors:NavigationViewHeaderBehavior.HeaderContext="Patients">

    <Page.Resources>
        <Style x:Key="DataGridHeader" TargetType="Grid">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="5,5,10,5"/>
            <Setter Property="Background" Value="{ThemeResource ControlAltFillColorSecondaryBrush}"/>
        </Style>
        <Style x:Key="DataGridHeaderCell" TargetType="TextBlock" BasedOn="{StaticResource BodyStrongTextBlockStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
        </Style>
        <Style x:Key="DataGridDataCell" TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,5,0"/>
        </Style>
        <Style x:Key="BorderStackPanel" TargetType="StackPanel">
            <Setter Property="Height" Value="60"/>
            <Setter Property="Padding" Value="10,0,10,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="6"/>
            <Setter Property="BorderBrush" Value="{ThemeResource CardStrokeColorDefaultBrush}"/>
            <Setter Property="Background" Value="{ThemeResource ControlFillColorDefaultBrush}"/>
        </Style>
    </Page.Resources>

    <Grid RowDefinitions="auto,auto,*" ColumnDefinitions="6*,2*"
          Margin="0,0,0,20">
        <Grid  Grid.ColumnSpan="2"  Grid.Row="0" ColumnDefinitions="3*,3*,2*"
               Margin="0,0,0,10">
            <StackPanel Grid.Column="0"
                        HorizontalAlignment="Left" VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Style="{StaticResource BorderStackPanel}">
                <AppBarButton Icon="Add" Label="Add" Command="{x:Bind ViewModel.AddPatientButtonCommand}"/>
                <AppBarButton Icon="Edit" Label="Edit" Command="{x:Bind ViewModel.EditPatientButtonCommand}"/>
                <AppBarButton Icon="Delete" Label="Delete" Command="{x:Bind ViewModel.DeletePatientButtonCommand}"/>
                <AppBarButton Icon="Zoom" Label="Detail" Command="{x:Bind ViewModel.PatientDeatailButtonCommand}"/>
                <AppBarButton Label="Measure" Command="{x:Bind ViewModel.MeasurementPatientButtonCommand}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE9D2;" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </StackPanel>
            <StackPanel Grid.Column="1" 
                        Orientation="Horizontal"
                        HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource BorderStackPanel}">
                <TextBlock Text="Filter" HorizontalAlignment="Center" VerticalAlignment="Center" 
                           Margin="10,10,0,10"/>
                <ComboBox Width="100" Height="35" SelectedIndex="0" 
                          HorizontalAlignment="Center" VerticalAlignment="Center" 
                          SelectedItem="{x:Bind ViewModel.SelectedFilterItem, Mode=TwoWay}"
                          Margin="10,10,0,10">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                            <Core:InvokeCommandAction Command="{x:Bind ViewModel.SelectedFilterChangedCommand}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <x:String>Name</x:String>
                    <x:String>Age</x:String>
                    <x:String>Gender</x:String>
                    <x:String>Height</x:String>
                    <x:String>Weight</x:String>
                </ComboBox>
                <TextBox Width="120" Height="35" x:Name="filterTextBox"
                         Visibility="{x:Bind ViewModel.FilterTextBoxkVisibility, Mode=OneWay}"
                         HorizontalAlignment="Center" VerticalAlignment="Center" 
                         Margin="10,10,0,10">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="TextChanged">
                            <Core:InvokeCommandAction Command="{x:Bind ViewModel.PatientsFilterChangedCommand}"
                                                      CommandParameter="{Binding ElementName=filterTextBox, Path=Text}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </TextBox>
                <ComboBox Width="120" Height="35" 
                          Margin="10,10,0,10" x:Name="filterComboBox"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          ItemsSource="{x:Bind ViewModel.FilterComboBoxItems, Mode=OneWay}"
                          SelectedItem="{x:Bind ViewModel.FilterComboBoxItem, Mode=TwoWay}"
                          Visibility="{x:Bind ViewModel.FilterComboBoxVisibility, Mode=OneWay}">
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                            <Core:InvokeCommandAction Command="{x:Bind ViewModel.PatientsFilterChangedCommand}"
                                                      CommandParameter="{Binding ElementName=filterComboBox, Path=SelectedItem}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Column="2"
                        HorizontalAlignment="Left" VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Margin="20,0,0,0"
                        Style="{StaticResource BorderStackPanel}">
                <AppBarButton Icon="Delete" Label="Delete" Command="{x:Bind ViewModel.DeleteMeasurementButtonCommand}"/>
                <AppBarButton Icon="Zoom" Label="Detail" Command="{x:Bind ViewModel.MeasurementDetailButtonCommand}"/>
            </StackPanel>
        </Grid>
        

        <ListView Grid.Row="2" Grid.Column="0" 
                  ItemsSource="{x:Bind ViewModel.Patients, Mode=TwoWay}" 
                  SelectedIndex="{x:Bind ViewModel.SelectedPatientIndex, Mode=TwoWay}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  IsItemClickEnabled="True"
                  ItemClick="ListView_ItemClick">
            
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="SelectionChanged">
                    <Core:InvokeCommandAction Command="{x:Bind ViewModel.PatientSelectionChangedCommand}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>

            <ListView.Header>
                <Grid Style="{StaticResource DataGridHeader}" Padding="11,0,3,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition MinWidth="60" Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition MinWidth="60" Width="1*"/>
                        <ColumnDefinition MinWidth="60" Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Name" Style="{StaticResource DataGridHeaderCell}"/>
                    <TextBlock Grid.Column="1" Text="Id number" Style="{StaticResource DataGridHeaderCell}"/>
                    <TextBlock Grid.Column="2" Text="Gender" Style="{StaticResource DataGridHeaderCell}"/>
                    <TextBlock Grid.Column="3" Text="Age" Style="{StaticResource DataGridHeaderCell}"/>
                    <TextBlock Grid.Column="4" Text="Height" Style="{StaticResource DataGridHeaderCell}"/>
                    <TextBlock Grid.Column="5" Text="Weight" Style="{StaticResource DataGridHeaderCell}"/>
                </Grid>
            </ListView.Header>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local1:Patient">
                    <Grid RowDefinitions="30,auto">
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition MinWidth="60" Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition MinWidth="60" Width="1*"/>
                                <ColumnDefinition MinWidth="60" Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{x:Bind Path=FullName}" Style="{StaticResource DataGridDataCell}"/>
                            <TextBlock Grid.Column="1" Text="{x:Bind Path=IdentificationNumber}" Style="{StaticResource DataGridDataCell}"/>
                            <TextBlock Grid.Column="2" Text="{x:Bind Path=GenderString}" Style="{StaticResource DataGridDataCell}"/>
                            <TextBlock Grid.Column="3" Text="{x:Bind Path=Age}" Style="{StaticResource DataGridDataCell}"/>
                            <TextBlock Grid.Column="4" Text="{x:Bind Path=Height}" Style="{StaticResource DataGridDataCell}"/>
                            <TextBlock Grid.Column="5" Text="{x:Bind Path=Weight}" Style="{StaticResource DataGridDataCell}"/>
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding Path=IsExpanded, Mode=OneWay}" Margin="20,20,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Grid.Row="0" Text="{x:Bind Address}" Style="{StaticResource BodyTextBlockStyle}"/>
                            <TextBlock Grid.Column="1" Grid.Row="0" Text="{x:Bind Email}" Style="{StaticResource BodyTextBlockStyle}"/>
                            <TextBlock Grid.Column="2" Grid.Row="0" Text="{x:Bind PhoneNumber}" Style="{StaticResource BodyTextBlockStyle}"/>
                            <TextBlock Grid.ColumnSpan="3" Grid.Row="1" Text="{x:Bind Description}" Style="{StaticResource BodyTextBlockStyle}"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <ListView Grid.Row="2" Grid.Column="1" 
                  ItemsSource="{x:Bind ViewModel.Measurements, Mode=TwoWay}" 
                  SelectedIndex="{x:Bind ViewModel.SelectedMeasurmentIndex, Mode=TwoWay}"
                  Margin="20,0,0,0"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local1:MeasurementGroup">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{x:Bind Path=MeasurementDateTimeString}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</Page>

