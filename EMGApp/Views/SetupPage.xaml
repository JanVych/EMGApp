<Page
    x:Class="EMGApp.Views.SetupPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local1="using:EMGApp.Models"
    mc:Ignorable="d">


    <Grid RowDefinitions="*" ColumnDefinitions="auto,*" Margin="0,0,0,10">
        <Border Grid.Row="0" Grid.Column="0" BorderThickness="1" CornerRadius="4" 
              BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
              Background="{ThemeResource ControlFillColorDefaultBrush}">
            <Grid RowDefinitions="1*,1*,1*,1*,1*,1*,1*,1*,1*,1*" ColumnDefinitions="*" Margin="10,10,10,10">

                <ComboBox Grid.Row="0" PlaceholderText="select" Width="300"  HorizontalAlignment="Left" VerticalAlignment="Center"
                          Header="Input device" 
                          SelectedIndex="{x:Bind ViewModel.SelectedDeviceIndex, Mode=TwoWay}" ItemsSource="{x:Bind ViewModel.Devices, Mode=TwoWay}"/>

                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Slider Width="220" Minimum="9" Maximum="16" StepFrequency="1" IsThumbToolTipEnabled="False" Margin="0,0,20,0"
                            SmallChange="1" Value="{x:Bind ViewModel.WindowSizeSlider, Mode=TwoWay}" 
                            Header="Window size" TickPlacement="Outside" TickFrequency="1" />
                    <Border BorderBrush="{ThemeResource ControlStrokeColorDefaultBrush}" Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                            CornerRadius="4" BorderThickness="1" Width="60" Height="35"
                            HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <TextBlock Text="{x:Bind ViewModel.WindowSize, Mode=OneWay}" MaxHeight="35"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </StackPanel>
                
                <NumberBox Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                           Header="Smple rate" Value="{x:Bind ViewModel.SampleRate, Mode=TwoWay}" />

                <NumberBox Grid.Row="3" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                           Header="Window shift time [ms]" Value="{x:Bind ViewModel.BufferInMilliseconds, Mode=TwoWay}"/>

                <ToggleSwitch Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" OffContent="No" OnContent="Yes"
                              Header="Fixed measurement time" IsOn="{x:Bind ViewModel.MeasurementFixedTime, Mode=TwoWay}"/>

                <NumberBox Grid.Row="5" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                           Header="Measurement Time [s]" Value="{x:Bind ViewModel.MeasurementTimeInSec, Mode=TwoWay}"/>

                <ComboBox Grid.Row="6" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          SelectedIndex="{x:Bind ViewModel.DominantFrequencyClaculationTypeIndex, Mode=TwoWay}" SelectedValuePath="Key" DisplayMemberPath="Value"
                          Header="Dominant malculation method" ItemsSource="{x:Bind ViewModel.DominantFrequencyCalculationTypeStrings, Mode=OneTime}"/>

                <ComboBox Grid.Row="7" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                          SelectedIndex="{x:Bind ViewModel.MeasurementTypeIndex, Mode=TwoWay}" SelectedValuePath="Key" DisplayMemberPath="Value"
                          Header="Measurement type" ItemsSource="{x:Bind ViewModel.MeasurementTypeStrings, Mode=OneTime}"/>

                <NumberBox Grid.Row="8" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                           Header="Force [N]" Value="{x:Bind ViewModel.Force, Mode=TwoWay}"/>
                
                <Button Grid.Row="9" Content="Connect" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Command="{x:Bind ViewModel.ConnectButtonCommand}"/>
            </Grid>
        </Border>
        <Grid Grid.Row="0" Grid.Column="1" Margin="40,0,0,0" ColumnDefinitions="*" RowDefinitions="auto,*"
              BorderThickness="1" CornerRadius="0" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumLowBrush}">
            
            <Grid ColumnDefinitions="auto,auto,auto" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock Grid.Column="0" Text="Filter" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,10,0,10"/>
                <ComboBox Grid.Column="1" Width="100" Height="35" SelectedIndex="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,10,0,10">
                    <x:String>Group</x:String>
                    <x:String>Name</x:String>
                    <x:String>Age</x:String>
                </ComboBox>
                <TextBox Grid.Column="2" Width="200" Height="35" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,10,0,10"/>
            </Grid>
            
            <ListView Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                  ItemsSource="{x:Bind ViewModel.Patients, Mode=TwoWay}" 
                  SelectedIndex="{x:Bind ViewModel.SelectedPatientIndex, Mode=TwoWay}">
                <ListView.Header>
                    <Grid ColumnDefinitions="1*,1*,1*,1*,3*,1*,1*,1*" Margin="5,5,5,5">
                        <TextBlock Text="Name" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center"  Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Age" Grid.Column="2" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Gender" Grid.Column="3" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Address" Grid.Column="4" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Condition" Grid.Column="5" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Height" Grid.Column="6" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                        <TextBlock Text="Weight" Grid.Column="7" HorizontalAlignment="Center" Style="{StaticResource BodyStrongTextBlockStyle}"/>
                    </Grid>
                </ListView.Header>

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local1:Patient">
                        <Grid ColumnDefinitions="1*,1*,1*,1*,3*,1*,1*,1*">
                            <TextBlock Grid.Column="0" Text="{x:Bind Path=Name}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="1" Text="{x:Bind Path=Surname}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="2" Text="{x:Bind Path=Age }" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="3" Text="{x:Bind Path=GenderString }" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="4" Text="{x:Bind Path=Address}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="5" Text="{x:Bind Path=Condition}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="6" Text="{x:Bind Path=Height}" HorizontalAlignment="Center"/>
                            <TextBlock Grid.Column="7" Text="{x:Bind Path=Weight}" HorizontalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</Page>
